text,label_score,label
"Although machine learning approaches have been proposed for many types of inverse problems [1, 2, 3, 4], most of them make prior assumptions on the specific form of the underlying partial differential equation (PDE) and use discretization i.",,
"A similar application is a correction term within a fixed-point iterator, as outlined in [439].",,
"Other PDE modeling approaches include accurate neural PDE solvers [40, 8, 70] or other improved PINN variants such as competitive PINNs [97] and robust PINNs [3].",,
"Other approaches of ML-based PDE solvers include the physics informed neural networks (PINNs) which utilize the physics-informed loss [40, 50, 51, 60, 61], neural operators [5, 29, 33, 34, 38, 57] , and autoregressive methods [3, 6, 14, 23, 26] , etc.",,
", [33] – they lack convergence guarantees and predictive uncertainty modeling, i.",,
"[33] Jun-Ting Hsieh, Shengjia Zhao, Stephan Eismann, Lucia Mirabella, and Stefano Ermon.",,
"Recent approaches can be broadly classified into three categories: (i) neural approaches that approximate the solution function of the underlying PDE [24, 66]; (ii) hybrid approaches, where neural networks either augment numerical solvers or replace parts of them [1, 2, 18, 33, 43, 79]; (iii) neural approaches in which the learned evolution operator maps the current state to a future state of the system [4, 7, 9, 21, 49, 54, 68, 87].",,
"Also, one can consider optimization problems or solving ordinary or partial diferential equations using numerical methods, which are frequently used in the computational and physical sciences [9, 20, 25, 32, 40, 49, 72, 73, 75, 77, 83, 86, 103, 114, 116, 117, 129, 132, 144].",,
"Often, these approaches speed up classical methods [68, 30, 2], augment weaknesses in end-to-end deep learning solvers [41], or provide guarantees that deep networks by themselves, do not [29, 10].",,
"On the other hand, works like [29, 46, 53] apply neural networks iteratively multiple times, improving the obtained approximation of the solution each time.",,
"As an alternative to MLPs and PINNs, convolutional neural networks (CNNs) have also been used to solve PDEs, either as independent solvers [12, 13], or as part of fluid solvers, such as to perform pressure projection of incompressible fluid flows [14, 15], to model acoustic wave propagation [16], or to solve the Poisson equation for plasma fluid flows [17].",,
"In [10], iterative solvers for elliptic problems were learned using neural networks, but these were built upon existing solvers in order to guarantee high order convergence.",,
"While some approaches use deep learning to accelerate traditional CFD solvers (Hsieh et al., 2019; Kochkov et al., 2021a), a certain body of research treats the flow problems as problems defined over a cartesian grid or an irregular mesh and uses techniques involving convolutional or graph neural operators to predict the flow fields (Hennigh, 2017; Jiang et al.",,
"While some approaches use deep learning to accelerate traditional CFD solvers (Hsieh et al., 2019; Kochkov et al., 2021a), a certain body of research treats the flow problems as problems defined over a cartesian grid or an irregular mesh and uses techniques involving convolutional or graph neural…",,
"Sec-
ond, the local differential operators that span this functional space can be treated as numerically employing convolution kernels (Hsieh et al., 2018; Lin et al., 2013).",,
"Second, the local differential operators that span this functional space can be treated as numerically employing convolution kernels (Hsieh et al., 2018; Lin et al., 2013).",,
"Another different approach known as autoregressive methods was developed in [1, 5, 15, 17], where the PDEs are simulated iteratively, resembling conventional numerical methods with time marching.",,
"There are researches about the so-called neural augmentation where a neural component is added to finite elements [11], multigrid solvers [10], and eikonal solvers [19].",,
"This differs from other learned PDE solvers and surrogate models, which are almost always trained for a single mesh or geometry and cannot be used when the geometry varies [11, 12, 14, 26].",,
"PDEs are a fundamental modeling techniques, and designing neural networks-aided solvers, particularly in high-dimensions, is of widespread usage in many scientific domains (Hsieh et al., 2019; Brandstetter et al., 2022).",,
[10] utilized a convolutional neural network (CNN) to accelerate the convergence of Jacobi method.,,
"Various works are numerical-neural hybrid approaches where the computation graph of the solver is preserved and heuristically-chosen parameters are left for the neural network to predict (Bar-Sinai et al., 2019; Kochkov et al., 2021; Greenfeld et al., 2019; Hsieh et al., 2019; Praditia et al., 2021; Um et al., 2020; Garcia Satorras et al., 2019).",,
[29] proposed to use neural networks to modify acobi-style iterative solvers.,,
"[29] Hsieh JT, Zhao S, Eismann S, Mirabella L, Ermon S.",,
"Application IV: Physics-Informed Neural Network As a differentiation modality, HoD-Net is also useful for solving neural PDEs problems (Hsieh et al. 2019; Yang, Meng, and Karniadakis 2021) a.",,
"Application IV: Physics-Informed Neural Network As a differentiation modality, HoD-Net is also useful for solving neural PDEs problems (Hsieh et al. 2019; Yang, Meng, and Karniadakis 2021) a.k.a. physics-informed neural networks (PINNs).",,
"…or enhancing conventional ones in many cases [Guo et al., 2016, Zhu and Zabaras, 2018, Sirignano and Spiliopoulos, 2018, Han et al., 2018, Hsieh et al., 2019, Raissi et al., 2019, Bhatnagar et al., 2019, Bar-Sinai et al., 2019, Berner et al., 2020, Li et al., 2020a,c,b, Um et al., 2020,…",,
"A common and straightforward approach is to follow an Encoder-Process-Decoder (EPD) scheme to map the input solution at time t to the solution at next time step [7, 27, 57, 60, 64, 70].",,
", 2019), or aimed at correcting iterative solvers (Hsieh et al., 2019).",,
"Other research focused on efficient simulations by learning conservation laws (Cranmer et al., 2020; Greydanus et al., 2019), or aimed at correcting iterative solvers (Hsieh et al., 2019).",,
"Three important works in this area are Bar-Sinai et al. (2019), Greenfeld et al. (2019), and Hsieh et al. (2019).",,
"Hsieh et al. (2019) even have convergence guarantees for their method, something rare in deep learning.",,
"The literature also includes studies focused on applying deep learning techniques in multigrid and numerical PDEs [25, 20].",,
"Using, for example, the special activation function σ(x) = ReLU(x) := max{0, x} ≥ 0, the above iterative process can be naturally modified to preserve the constraint (1.2):
ui = ui−1 + σ ◦Bi ∗ σ(f − A ∗ ui−1), i = 1 : ν. (1.4)
This forms the basic block of MgNet, precisely as in [15]. partial differential equations (PDEs) [52, 53], we introduce this residual
ri = f − A ∗ ui.",,
"The literature also includes studies focused on applying deep learning techniques in multigrid and numerical PDEs [19, 16].",,
"Although much recent effort has been dedicated to investigating the PINN framework for solving PDEs, other neural PDE solution techniques exist, notably techniques which learn iterators that are not solutions to PDEs themselves but rather provide a method of quickly computing such solutions [21].",,
"The first category is using deep neural network to improve classical numerical methods, see for example [45,47,24,20].",,
"Because of its multi-scale architecture, the U-Net is widely used in many problems in scientific computing, such as Navier–Stokes simulations [42], and PDE-solvers [15, 44].",,
"[82], where an iterative solver is coupled to a deep linear network to guarantee the accuracy level of the network prediction.",,
[19] aims to improve an existing solver through the supplemental application of a neural network.,,
"A different direction within the optimization of multigrid methods, which has recently become popular, is applying machine learning to improve the individual solver components, such as [15, 19, 20, 22].",,
"The first category is using deep neural network to improve classical numerical methods, see for example [40, 42, 21, 15].",,
This is an attempt to reproduce results from [17].,,
The other multilevel solver that we tried is a U-Net from [17].,,
"As we pointed in Section VI, we cannot be sure that we reproduce results from [17] because the paper contains omissions.",,
"Given that, the whole scheme from [17] is a generalized Richardson iteration for the preconditioned system.",,
Neural network of [48] is applied to speed up iterative solver for elliptic type PDEs.,,
"Hybrid approaches combine an existing iterative method with a feed-forward network to compute the properties of the target system accurately while enhancing the convergence property and the solution quality of the existing method [18, 19, 32].",,
[24] trained a convolutional network to improve a GMG algorithm for the structured Poisson problem.,,
[34] used the NN for learning PDE solvers with convergence guarantees.,,
"Another example from scientific computing is [26], which deals with solving partial differential equations.",,
"An orthogonal line of work use neural networks as powerful function approximators in existing numerical PDE and linear system solvers to achieve faster convergence, generalize to different boundary conditions or larger problems, and approximate underresolved features in coarse-grained simulations (Hsieh et al., 2018; Luz et al., 2020; Bar-Sinai et al., 2019).",,
"As suggested in [Hsieh et al., 2019], we also choose different iteration number k, 1 ≤ k ≤ b in the training, so that H learns to converge at each iteration, where larger b mimics the behavior of solving problems to higher accuracy while smaller b mimics inexpensive smoothing steps in multigrid.",,
"Consequently, it is deeply unavoidable to find a numerical solution to the PDEs, which has always been a research hotspot by the researchers over the past few decades [9-13].",,
2 learning tools in designing data-driven methods for solving PDEs with the improvement of the computing performance of computers [9-13].,,
"The Poisson equation serves as an example problem in the recent literature; see [32, 11, 34].",,
"A fast, iterative PDE-solver was proposed by learning to modify each iteration of the existing solver [11].",,
"Instead of emulating the analog computing blocks, neural networks are used to find specific hyper-parameters of them or analog circuit system such as the arrangement of units or blocks [8], layout [9], and non-linear factor of crossbar arrays [2].",,
"As neural networks have the ability to find solutions of specific partial or ordinary differential equations [15, 9], we use FCNN or Neural ODE [18] as circuit equation solvers.",,
"As deep neural networks (DNNs) have the ability to solve ordinary or partial differential equations [15, 9], DNNs are used as a model to emulate the circuit behavior which can be represented by differential equations [16, 5].",,
"In addition, supervised learning has also been used to guide the discretization process in a data-driven way [3] or to learn efficient iterative solvers [13].",,
"Learnable surrogates were proposed for various scientific computing tasks in the natural sciences by exploiting fully-connected [18]–[20], convolutional [21]– [23], and hybrid [24]–[26] neural architectures.",,
"Inspired by the recently proposed deep PDE solver [2], we introduce a deep learning-based thickness solver.",,
"The thickness estimation problem is more challenging than [2], since additional procedures are involved, such as integrating lines and interpolating missing values (refer to section 2.",,
"Prior work has shown that neural networks can learn how to solve NP-complete decision problems and optimization problems [43, 39, 23].",,
Existing studies have also identified discontinuities in finite-difference solutions with deep learning [46] and focused on improving the iterative behavior of linear solvers [24].,,
[17] aims to improve an existing solver through the supplementary application of a neural network.,,
"A different direction within the optimization of multigrid methods, that has recently become popular, is the application of machine learning to improve the individual components of a solver, such as [12, 17, 18].",,
The authors in [12] modified existing iterative PDEs solvers with a deep neural network in order to accelerate their convergence speed.,,
"ML techniques have been used to effectively solve differential equations [5], [12], [21], [22], and [27] but also to discover underlying dynamics from data [2], [20] and [23] and even to build robust neural networks architectures based on differential equations [3], [17] and [25] .",,
"Recently, machine-learning based models have been developed to either learn new discretization schemes from solution data [11, 12] or to mimic these schemes through novelties in neural network architectures [13, 14].",,
"The second approach does not directly seek to find the parametric map from X to Y but rather is thought of, for fixed x ∈ X , as being a parametrization of the solution y ∈ Y by means of a deep neural network [19, 20, 29, 32, 44, 50].",,
"Another notable related paper is Hsieh et al. (2019), which uses a convolutional network to improve on an existing linear iterative solver.",,
"Another notable related paper is Hsieh et al. (2019), which uses a convolutional network to improve on an existing linear iterative solver. In particular, learning is applied to improve a GMG algorithm for structured Poisson problems in an end-to-end manner, by using a U-Net architecture with several downsampling and upsampling layers, and learning from supervised data. Schmitt et al. (2019) use evolutionary methods to optimize a GMG solver.",,
"Another notable related paper is Hsieh et al. (2019), which uses a convolutional network to improve on an existing linear iterative solver. In particular, learning is applied to improve a GMG algorithm for structured Poisson problems in an end-to-end manner, by using a U-Net architecture with several downsampling and upsampling layers, and learning from supervised data. Schmitt et al. (2019) use evolutionary methods to optimize a GMG solver. Katrutsa et al. (2017) optimize restriction and prolongation operators for GMG, by formulating the entire two-grid algorithm as a deep neural network, and approximately minimizing the spectral radius of the resulting iteration matrix. They evaluate their method on single instances of various structured-grid differential equations in 1D. Sun et al. (2003) use a tailored network with a single hidden layer to solve the Poisson equation on a specific mesh.",,
"Another notable related paper is Hsieh et al. (2019), which uses a convolutional network to improve on an existing linear iterative solver. In particular, learning is applied to improve a GMG algorithm for structured Poisson problems in an end-to-end manner, by using a U-Net architecture with several downsampling and upsampling layers, and learning from supervised data. Schmitt et al. (2019) use evolutionary methods to optimize a GMG solver. Katrutsa et al. (2017) optimize restriction and prolongation operators for GMG, by formulating the entire two-grid algorithm as a deep neural network, and approximately minimizing the spectral radius of the resulting iteration matrix.",,
"In this regard, Hsieh et al. (2019) and Farimani et al. (2017) have, for example, demonstrated that it is possible to learn a general PDE solver for some simple linear and elliptic PDEs.",,
Tadmor (2012)).,,
"Recently, because of the trends for the efficient hardware implementations, neural networks have been increasingly applied in solving PDEs [6, 32, 51, 59, 60, 74, 89, 97, 99, 101, 13, 12, 14, 15, 22, 24, 31, 33, 36, 43, 47, 50, 52, 58, 63, 68, 69, 72, 73, 77, 80, 85, 86, 106, 91, 100, 102, 103, 107, 108, 109, 110] and inverse problems involving PDEs [109, 79, 78, 87, 88, 90, 92, 93, 95, 96, 94, 105, 112, 113].",,
"Hsieh et al. (Hsieh et al., 2019) attempted to learn domain specific fast PDE solvers by learning how to iteratively improve the solution using a deep neural network, resulting in a 2-3 times speedup compared to state of the art solvers.",,
"[12] attempted to learn domain-specific fast PDE solvers by learning how to iteratively improve the solution using a deep neural network, resulting in a 2-speedup compared to state-of-the-art solvers.",,
"raight forward with graph convolution operations. Another approach is to solve the problem inside a larger bounding box and then ﬁlter out the solutions that does not belong to the region of interest [25]. Acknowledgement We would like to thank Dr. Yi Ren for the helpful suggestions in experiments and paper writing, Dr. Yuzhong Chen for proofreading the paper, and Haoyang Wei, Dr. Yang Yu for helping ",,
"ions: (1) All loading/ response observations are in image form. This assumption makes the use of convolutional neural networks as data-driven model possible. (2) Consider linear physics only. As with [24, 25], we start with simpler linear physics ﬁrst since it is easier to prove the convergence of the proposed algorithm. Future work will extend this framework to non-linear physics and irregular mesh data.",,
"es inspired by FEA. Parallel works have been done to improve the convergence and accuracy of ﬁnite dierence analysis (FDA) solvers to initial value problems (IVP) through learning the optimum ﬁlters [25], or by building a hybrid model with ODE information hard-coded [44]. It is found that similarities exist between dierent FDA solvers and some neural network structures in [45]. Based on this ﬁnding,",,
"ve been made to predict physics response or parameters with data driven models [8, 11, 12, 13, 16], and several seminal works have been done to build hybrid learning mechanisms with physics knowledge [14, 25, 41, 42, 43, 44, 45, 46].Early pioneering work has shown that the global or element stiness matrix can be learnt with neural network for simple systems [41].Based on the optimality condition of topology optimization, ecien",,
"In this context, several works have proposed methods for improving the solution of PDE problems (Long et al., 2018; Bar-Sinai et al., 2019; Hsieh et al., 2019) or used PDE formulations for unsupervised optimization (Raissi et al.",,
"In this context, several works have proposed methods for improving the solution of PDE problems (Long et al., 2018; Bar-Sinai et al., 2019; Hsieh et al., 2019) or used PDE formulations for unsupervised optimization (Raissi et al., 2018).",,
"ptimization methods [38, 39, 40, 147] and neural networks[7, 42, 81, 65, 77, 78, 98, 118, 129, 132, 134, 136]. Among these methods, neural networks have become increasingly popular tools to solve PDEs[7, 15, 14, 16, 18, 29, 31, 42, 41, 43, 46, 54, 59, 63, 64, 65, 66, 75, 77, 78, 79, 83, 90, 91, 96, 97, 98, 102, 107, 112, 113, 116, 118, 121, 129, 132, 133, 134, 136, 137, 138, 142, 144, 145, 146]and inverse problems involving PDEs [106, 105, 114, 115, 120, 124, 125, 127, 128, 126, 141, 145, 148, 149]. Their popularity is due to universal approximation theorems that state that neural networks ",,
Motivated by [6] we construct a neural iterator from a semi-implicit update rule.,,
[6] develop a promising way to learn numerical solver while providing a theoretical convergence guarantee.,,
"Implementation Details: Following [6], we use a three-layer convolutional neural network to model each of the Hi.",,
"On a stark contrast with previous work [6], we have several sets of parameters {Θi}i=1:N , δx, δt, and attached to the PDEs governing equation.",,
2 Neural Solver We propose the following iterator using similar notation as in [6],,
"Once the iterative methods are optimized on a set of problems, generalization to different boundary conditions, domain geometries, and other similar models, is explored and can be sometimes guaranteed [23].",,
"The last group, very different from previous two, adopts NN to optimize traditional iterative methods [14,23,24,35].",,
", 1998), many suggested to design a network to solve specific PDEs (Hsieh et al., 2019; Baque et al., 2018; Baymani et al., 2010; Berg & Nyström, 2018; Han et al., 2017; 2018; Katrutsa et al., 2017; Mishra, 2018; Sirignano & Spiliopoulos, 2018; Sun et al., 2003; Tang et al., 2017; Wei et al., 2018), generalizing for different choices of right hand sides, boundary conditions, and in some cases to different domain shapes.",,
"Starting with the classical paper of (Lagaris et al., 1998), many suggested to design a network to solve specific PDEs (Hsieh et al., 2019; Baque et al., 2018; Baymani et al., 2010; Berg & Nyström, 2018; Han et al., 2017; 2018; Katrutsa et al., 2017; Mishra, 2018; Sirignano & Spiliopoulos, 2018;…",,
"(Hsieh et al., 2019) proposes an elegant learning based approach to accelerate existing iterative solvers, including multigrid solvers.",,
"ity pattern are trained by minimizing the Frobenius norm of a large power of the multigrid error propagation matrix with a sampling technique similar to that used in machine learning. In Hsieh et al. [16], a linear U-net structure is proposed as a solver for linear PDEs on regular mesh. In this paper, we explore the connection between multigrid and convolutional neural networks, in several directions.",,
"[21] Hsieh J T, Zhao S, Eismann S, et al.",,
"We also note that other works where neural networks replace a whole or part of numerical methods [8, 9, 10, 11, 12, 14, 15, 24] can be organized in the same way.",,
"For example, [10, 11, 20, 21, 22, 23] propose to use predicted solutions by machine learning as initial guesses of subsequent traditional numerical methods, and [24] combines a neural network and an iterative solver to accelerate it while maintaining convergence guarantee.",,
"The Poisson equation serves as an example problem in the recent literature; see [10, 26, 28].",,
"[10] Jun-Ting Hsieh, Shengjia Zhao, Stephan Eismann, Lucia Mirabella, and Stefano Ermon, Learning neural PDE solvers with convergence guarantees, arXiv preprint arXiv:1906.",,
"A fast, iterative PDE-solver was proposed by learning to modify each iteration of the existing solver [10].",,
"In a recent Stanford study, the authors solved the 2D Poisson equation using a deep neural network and had 2-3 times speedup in comparison to standard iterative solvers [7].",,
"There are roughly three distinct directions emerging in the literature: (1) discovery of governing equations directly from data [3, 20, 12]; (2) development of augmented numerical methods [2, 21, 7, 15, 18]; (3) surrogate modeling [4, 19, 1, 14, 13, 5].",,
"The original paper proposes to use machine learning techniques in order to find high performing update rules instead of designing them by hand [1], while still guaranteeing convergence.",,
A common approach to build T and c is to splitA intoA = M −N and by rewritingAu = f asMu = Nu+f the following updating rule naturally arises: u = M−1Nuk +M−1f For more details we refer readers to [4] or to [1].,,
For more information we kindly refer to the original paper [1].,,
"With k ∈ DU(1, 20) we denote the sampling of k from a discrete uniform distribution on the interval [1, 20].",,
"This is the reason why our work was focused on reproducing the results of [1], and on empirically proving the generalization of their model to arbitrary shapes and grid sizes.",,
